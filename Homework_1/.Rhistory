knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(tidyverse)
library(psych)
library(ggplot2)
library(ggcorrplot)
?ggcorrplot
??ggcorrplot
install.packages("ggcorrplot")
# load libraries
library(tidyverse)
library(psych)
library(ggplot2)
library(ggcorrplot)
library(statsr)
# load libraries
library(tidyverse)
library(psych)
library(ggplot2)
library(ggcorrplot)
library(statsr)
# loading datasets
test <- read_csv('https://raw.githubusercontent.com/letisalba/Data_621/master/Homework_1/csv/moneyball-evaluation-data.csv')
train <- read_csv('https://raw.githubusercontent.com/letisalba/Data_621/master/Homework_1/csv/moneyball-training-data.csv')
glimpse(train)
summary(train)
describe(train)
# missing values
colSums(is.na(train))
# variable distributions
train %>%
gather(variable, value, TARGET_WINS:TEAM_FIELDING_DP) %>%
ggplot(., aes(value)) +
geom_density(fill = "#3A8B63", color ="#3A8B63") +
facet_wrap(~variable, scales ="free", ncol = 4) +
labs(x = element_blank(), y = element_blank())
train %>%
gather(variable, value, -TARGET_WINS) %>%
ggplot(., aes(value, TARGET_WINS)) +
geom_point(fill = "#3A8B63", color ="#3A8B63") +
geom_smooth(method = "lm", se = FALSE, color = "black") +
facet_wrap(~variable, scales ="free", ncol = 4) +
labs(x = element_blank(), y = "Wins")
corrplot(train, method = 'color', order = 'alphabet')
install.packages(corrplot)
install.packages('corrplot')
# load libraries
library(tidyverse)
library(psych)
library(ggplot2)
library(ggcorrplot)
library(statsr)
library(corrplot)
corrplot(train, method = 'color', order = 'alphabet')
corrplot(train)
train_cor <- cor(train)
corrplot(train_cor)
train_cor <- cor(train)
corrplot(train_cor, method = 'square', order = 'FPC', type = 'lower', diag = FALSE)
train_cor <- cor(train)
corrplot.mixed(train_cor, order = 'AOE')
train_cor <- cor(train)
corrplot(train_cor, method = 'color', order = 'alphabet')
train_cor <- cor(train)
corrplot(train_cor, method = 'number')
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "upper", tl.col = "black", diag = FALSE))
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "upper", tl.col = "black", diag = FALSE)
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "upper", tl.col = "black", diag = FALSE)
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "upper", tl.col = "black")
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "upper", tl.col = "black", diag = TRUE)
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "lower", tl.col = "black", diag = TRUE)
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "lower", tl.col = "black", diag = 'FALSE')
train %>%
cor(., use = "complete.obs") %>%
corrplot(method = "color", type = "lower", tl.col = "black", diag = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(DataExplorer)
library(ggplot2)
library(tidyr)
library(corrplot)
library(mice)
# read data
baseball_df <- read.csv('https://raw.githubusercontent.com/letisalba/Data_621/master/Homework_1/csv/moneyball-training-data.csv')
baseball_eval <- read.csv('https://raw.githubusercontent.com/letisalba/Data_621/master/Homework_1/csv/moneyball-evaluation-data.csv')
head(baseball_df)
dim(baseball_df)
summary(baseball_df)
print('Number of observations:')
nrow(baseball_df)
print('Observations per year, 1871 - 2006:')
round(nrow(baseball_df)/(2006-1871),2)
# distribution
plot_histogram(baseball_df)
# against the response variable
plot_scatterplot(baseball_df, by = "TARGET_WINS")
# boxplot for train dataset
plot_boxplot(baseball_df, by="TARGET_WINS")
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'))
round(100*colSums(is.na(baseball_df))/nrow(baseball_df),2)
#New DF with Missings Removed
baseball_df_mv <- baseball_df[, !names(baseball_df) %in% c('TEAM_BATTING_HBP','TEAM_BASERUN_CS','TEAM_FIELDING_DP')]
summary(baseball_df_mv)
#Impute NAs with Median
baseball_df_imputed <- mice(baseball_df_mv, m=5, maxit = 5, method = 'pmm')
baseball_df_final <- complete(baseball_df_imputed)
summary(baseball_df_final)
ggplot(melt(baseball_df_final), aes(x=value)) + geom_histogram() + facet_wrap(~variable, scale='free') + labs(x='', y='Frequency')
ResidualAnalysis <- function(lmod) {
# Plot residuals
plot(lmod)
# Shapiro test
#   The null hypothesis is that the residuals are normal.
#   If the p-value is small, reject the null (i.e., the residuals are not normal).
st <- shapiro.test(lmod$residuals)
if (st$p.value <= 0.05) {
print(paste0("The p-value of ", st$p.value, " is <= 0.05, so reject the null; i.e., the residuals are NOT normal."))
} else {
print(paste0("The p-value of ", st$p.value, " is > 0.05, so do not reject the null; i.e., the residuals are normal."))
}
}
# Residual analysis
ResidualAnalysis(lm1)
# Residual analysis
ResidualAnalysis(lmod)
# Residual analysis
ResidualAnalysis(lm)
m1 <- lm(TARGET_WINS ~., data = baseball_df_final, na.action = na.omit)
summary(m1)
plot(m1)
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(knitr)
library(tidyverse)
library(psych)
library(ggplot2)
library(ggcorrplot)
library(statsr)
library(corrplot)
library(PerformanceAnalytics)
library(skimr)
knitr::include_graphics("https://github.com/letisalba/Data_621/blob/master/Homework_1/Images/homework1_table.png")
knitr::include_graphics("https://github.com/letisalba/Data_621/blob/master/Homework_1/Images/homework1_table.png")
knitr::include_graphics("/Users/letiix3/Desktop/Data_621/Homework_1/Images/homework1_table.png")
summary(baseball_df)
print('Number of observations:' nrow(baseball_df))
summary(baseball_df)
print('Number of observations: ')
nrow(baseball_df)
print('Observations per year, 1871 - 2006:')
round(nrow(baseball_df)/(2006-1871),2)
summary(baseball_df)
print(paste0('Number of observations: ', nrow(baseball_df)))
nrow(baseball_df)
print('Observations per year, 1871 - 2006:')
round(nrow(baseball_df)/(2006-1871),2)
summary(baseball_df)
print(paste0('Number of observations: ', nrow(baseball_df)))
print(paste0('Observations per year, 1871 - 2006:',round(nrow(baseball_df)/(2006-1871)),2))
round(nrow(baseball_df)/(2006-1871),2)
summary(baseball_df)
print(paste0('Number of observations: ', nrow(baseball_df)))
print(paste0('Observations per year, 1871 - 2006:',round(nrow(baseball_df)/(2006-1871),2)))
round(nrow(baseball_df)/(2006-1871),2)
summary(baseball_df)
print(paste0('Number of observations: ', nrow(baseball_df)))
print(paste0('Observations per year, 1871 - 2006: ',round(nrow(baseball_df)/(2006-1871),2)))
# against the response variable
plot_scatterplot(baseball_df, by = "TARGET_WINS", method = "lm")
# against the response variable
plot_scatterplot(baseball_df, by = "TARGET_WINS")
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'), tl.cex = 0.5)
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'), tl.cex = 1)
corrplot(cor(baseball_df[,2:17], use = 'complete.obs'), tl.cex = 0.5)
# model 1
m1 <- lm(TARGET_WINS ~., data = baseball_df_final)
summary(m1)
# model 1
m1 <- lm(TARGET_WINS ~., data = baseball_df_final, na.action = na.omit)
summary(m1)
# model 1
m1 <- lm(TARGET_WINS ~., data = baseball_df_final)
summary(m1)
# model 2
m2 <- lm(TARGET_WINS ~ INDEX + TEAM_BATTING_BB + TEAM_PITCHING_H + TEAM_PITCHING_HR, TEAM_PITCHING_BB, TEAM_PITCHING_SO, data = baseball_df_final)
summary(m2)
# model 3
m3 <- lm(TARGET_WINS ~ TEAM_BATTING_BB + TEAM_PITCHING_H + TEAM_PITCHING_HR, TEAM_PITCHING_BB, TEAM_PITCHING_SO, data = baseball_df_final)
summary(m3)
plot(m3)
# model 2
m2 <- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_2B + TEAM_BATTING_3B + TEAM_BATTING_HR + TEAM_BATTING_SO + TEAM_BASERUN_3B + TEAM_FIELDING_E, data = baseball_df_final)
# model 2
m2 <- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_2B + TEAM_BATTING_3B + TEAM_BATTING_HR + TEAM_BATTING_SO + TEAM_BASERUN_SB + TEAM_FIELDING_E, data = baseball_df_final)
summary(m2)
plot(m2)
# model 4
m2 <- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_HR + TEAM_BATTING_SO + TEAM_BASERUN_SB + TEAM_FIELDING_E, data = baseball_df_final)
summary(m2)
# model 3
m3 <- lm(TARGET_WINS ~ TEAM_BATTING_H + TEAM_BATTING_HR + TEAM_BATTING_SO + TEAM_BASERUN_SB + TEAM_FIELDING_E, data = baseball_df_final)
summary(m3)
plot(m3)
# model 4
m4 <- lm(TARGET_WINS ~ TEAM_BATTING_BB + TEAM_PITCHING_H + TEAM_PITCHING_HR, TEAM_PITCHING_BB, TEAM_PITCHING_SO, data = baseball_df_final)
summary(m4)
plot(m4)
# model 1
m1 <- lm(TARGET_WINS ~., data = baseball_df_final, na.action = na.omit)
summary(m1)
plot(m1)
